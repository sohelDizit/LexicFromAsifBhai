<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASC.Api.Community</name>
    </assembly>
    <members>
        <member name="T:ASC.Api.Community.CommunityApi">
            <summary>
            Provides access to community data api
            </summary>
        </member>
        <member name="P:ASC.Api.Community.CommunityApi.Name">
            <summary>
             Starting entry point name
            </summary>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.#ctor(ASC.Api.Impl.ApiContext)">
            <summary>
             Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPosts">
            <summary>
             Returns the list of all posts in blogs on the portal with the post title, date of creation and update, post text and author ID and display name
            </summary>
            <short>All posts</short>
            <returns>List of all posts</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreatePost(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a blog post with the specified title, content, tags and subscription to comments defined in the request body
            </summary>
            <short>Create post</short>
            <param name="title">New post title</param>
            <param name="content">New post text</param>
            <param name="tags">Tag list separated with ','</param>
            <param name="subscribeComments">Subscribe to post comments</param>
            <returns>Newly created post</returns>
            <example>
            <![CDATA[Sending data in application/json:
            
            {
                 title:"My post",
                 content:"Post content",
                 tags:"Me,Post,News",
                 subscribeComments: "true"
            }
            
            Sending data in application/x-www-form-urlencoded
            title="My post"&content="Post content"&tags="Me,Post,News"&subscribeComments="true"]]>
            </example>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdatePost(System.Guid,System.String,System.String,System.String)">
            <summary>
            Updates the specified post changing the post title, content or/and tags specified
            </summary>
            <short>Update post</short>
            <param name="postid">post ID</param>
            <param name="title">new title</param>
            <param name="content">new post text</param>
            <param name="tags">tag list separated with ','</param>
            <returns>Updated post</returns>
            <example>
            <![CDATA[
            Sending data in application/json:
            {
                 title:"My post",
                 content:"Post content",
                 tags:"Me,Post,News"
            }
            
            Sending data in application/x-www-form-urlencoded
            title="My post"&content="Post content"&tags="Me,Post,News"
            ]]>
            
            </example>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePost(System.Guid)">
            <summary>
            Deletes the selected post from blogs
            </summary>
            <short>Delete post</short>
            <param name="postid">post ID to delete</param>
            <returns>Nothing</returns>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyPosts">
            <summary>
            Returns the list of all blog posts for the current user with the post title, date of creation and update, post text and author ID and display name
            </summary>
            <category>Blogs</category>
            <short>My posts</short>
            <returns>My post list</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetSearchPosts(System.String)">
            <summary>
            Returns a list of blog posts matching the search query with the post title, date of creation and update, post text and author
            </summary>
            <category>Blogs</category>
            <short>
            Search posts
            </short>
             <param name="query">search query</param>
            <returns>Found post list</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetUserPosts(System.String)">
            <summary>
            Returns a list of blog posts of the specified user with the post title, date of creation and update and post text
            </summary>
            <short>User posts</short>
            <category>Blogs</category>
            <param name="username" remark="You can retrieve username through 'people' api">Username</param>
            <returns>List of user posts</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPostsByTag(System.String)">
            <summary>
            Returns a list of blog posts containing the specified tag with the post title, date of creation and update, post text and author
            </summary>
            <short>By tag</short>
            <category>Blogs</category>
            <param name="tag">tag name</param>
            <returns>List of posts tagged with tag name</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTags">
            <summary>
            Returns a list of all tags used with blog posts with the post title, date of creation and update, post text, author and all the tags used
            </summary>
             <category>Blogs</category>
             <short>Tags</short>
            <returns>List of tags</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPost(System.Guid)">
            <summary>
             Returns the detailed information for the blog post with the ID specified in the request
            </summary>
            <short>Specific post</short>
            <category>Blogs</category>
            <param name="postid">post ID</param>
            <returns>post</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetComments(System.Guid)">
            <summary>
             Returns the list of all the comments for the blog post with the ID specified in the request
            </summary>
            <category>Blogs</category>
             <short>Get comments</short>
            <param name="postid">post ID (GUID)</param>
            <returns>list of post comments</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddComment(System.Guid,System.String,System.Guid)">
            <summary>
             Adds a comment to the specified post with the comment text specified. The parent comment ID can be also specified if needed.
            </summary>
             <short>Add comment</short>
             <category>Blogs</category>
            <param name="postid">post ID</param>
            <param name="content">comment text</param>
            <param name="parentId">parent comment ID</param>
            <returns>List of post comments</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=00000000-0000-0000-0000-000000000000 or don't send it at all if you want your comment to be on the root level
             </remarks>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBlogCommentPreview(System.String,System.String)">
            <summary>
            Get comment preview with the content specified in the request
            </summary>
            <short>Get comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment content</param>
            <returns>Comment info</returns>
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBlogComment(System.String)">
             <summary>
            Remove comment with the id specified in the request
             </summary>
             <short>Remove comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment id</returns>
             <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBlogComment(System.String,System.String,System.String)">
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateBlogComment(System.String,System.String)">
            <category>Blogs</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarks">
            <summary>
            Returns the list of all bookmarks on the portal with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            All bookmarks
            </short>
            <category>Bookmarks</category>
            <returns>List of all bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyBookmarks">
            <summary>
            Returns the list of all bookmarks for the current user with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Added by me
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchBookmarks(System.String)">
            <summary>
            Returns a list of bookmarks matching the search query with the bookmark title, date of creation and update, bookmark description and author
            </summary>
            <short>
            Search
            </short>
            <category>Bookmarks</category>
             <param name="query">search query</param>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetFavsBookmarks">
            <summary>
            Returns the list of favorite bookmarks for the current user with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            My favorite
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarksTags">
            <summary>
            Returns a list of all tags used for bookmarks with the number showing the tag usage
            </summary>
            <short>
            All tags
            </short>
            <category>Bookmarks</category>
            <returns>List of tags</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarksByTag(System.String)">
            <summary>
            Returns the list of all bookmarks marked by the tag specified with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            By tag
            </short>
            <category>Bookmarks</category>
            <param name="tag">tag</param>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetRecentBookmarks">
            <summary>
            Returns the list of recenty added bookmarks with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Recently added
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopDayBookmarks">
            <summary>
            Returns the list of the bookmarks most popular on the current date with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Top of day
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopMonthBookmarks">
            <summary>
            Returns the list of the bookmarks most popular in the current month with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Top of month
            </short>
            <category>Bookmarks</category>
            <returns>List of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopWeekBookmarks">
            <summary>
            Returns the list of the bookmarks most popular on the current week with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Top of week
            </short>
            <category>Bookmarks</category>
            <returns>list of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopYearBookmarks">
            <summary>
            Returns the list of the bookmarks most popular in the current year with the bookmark titles, date of creation and update, bookmark text and author
            </summary>
            <short>
            Top of year
            </short>
            <category>Bookmarks</category>
            <returns>list of bookmarks</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkComments(System.Int64)">
            <summary>
             Returns the list of all comments to the bookmark with the specified ID
            </summary>
            <short>
             Get comments
            </short>
            <category>Bookmarks</category>
            <param name="id">Bookmark ID</param>
            <returns>list of bookmark comments</returns>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmarkComment(System.Int64,System.String,System.Guid)">
            <summary>
             Adds a comment to the bookmark with the specified ID. The parent bookmark ID can be also specified if needed.
            </summary>
            <short>
             Add comment
            </short>
            <param name="id">Bookmark ID</param>
            <param name="content">comment content</param>
            <param name="parentId">parent comment ID</param>
            <returns>list of bookmark comments</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=00000000-0000-0000-0000-000000000000 or don't send it at all if you want your comment to be on the root level
             </remarks>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkById(System.Int64)">
            <summary>
             Returns a detailed information on the bookmark with the specified ID
            </summary>
            <short>
             Get bookmarks by ID
            </short>
            <param name="id">Bookmark ID</param>
            <returns>bookmark</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmark(System.String,System.String,System.String,System.String)">
            <summary>
             Adds a bookmark with a specified title, description and tags
            </summary>
            <short>
             Add bookmark
            </short>
            <param name="url">url of bookmarking page</param>
            <param name="title">title to show</param>
            <param name="description">description</param>
            <param name="tags">tags. separated by semicolon</param>
            <returns>newly added bookmark</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 url:"www.teamlab.com",
                 title: "TeamLab",
                 description: "best site i've ever seen",
                 tags: "project management, collaboration"
             }
             
             Sending data in application/x-www-form-urlencoded
             url="www.teamlab.com"&title="TeamLab"&description="best site i've ever seen"&tags="project management, collaboration"
             ]]>
             </example>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetBookmarkCommentPreview(System.String,System.String)">
            <summary>
            Get comment preview with the content specified in the request
            </summary>
            <short>Get comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment content</param>
            <returns>Comment info</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmarkComment(System.String)">
             <summary>
            Remove comment with the id specified in the request
             </summary>
             <short>Remove comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment id</returns>
             <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddBookmarkComment(System.String,System.Int64,System.String)">
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateBookmarkComment(System.String,System.String)">
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmarkFromFavourite(System.Int64)">
            <summary>
            Removes bookmark from favourite. If after removing user bookmark raiting of this bookmark is 0, the bookmark will be removed completely.
            </summary>
            <short>Removes bookmark from favourite</short>
            <param name="id">Bookmark ID</param>
            <returns>bookmark</returns>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveBookmark(System.Int64)">
            <summary>
            Removes bookmark
            </summary>
            <short>Removes bookmark</short>
            <param name="id">Bookmark ID</param>
            <category>Bookmarks</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEvents">
            <summary>
            Returns the list of all events on the portal with the event titles, date of creation and update, event text and author
            </summary>
            <short>
            All events
            </short>
            <returns>list of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreateEvent(System.String,System.String,ASC.Web.Community.News.Code.FeedType)">
            <summary>
            Creates a new event with the parameters (title, content, type) specified in the request
            </summary>
            <short>
            Create event
            </short>        
             <param name="title">Title</param>
             <param name="content">Content</param>
             <param name="type">Type. One of  (News|Order|Advert|Poll)</param>
            <returns>New created event</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateEvent(System.Int32,System.String,System.String,ASC.Web.Community.News.Code.FeedType)">
            <summary>
            Updates the selected event changing the event title, content or/and event type specified
            </summary>
            <short>
            Update event
            </short>
             <param name="feedid">Feed ID</param>
             <param name="title">Title</param>
             <param name="content">Content</param>
             <param name="type">Type. One of  (News|Order|Advert|Poll)</param>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteEvent(System.Int32)">
            <summary>
            Deletes the selected event
            </summary>
            <short>Delete event</short>
            <param name="feedid">Feed ID</param>
            <returns>Nothing</returns>
            <exception cref="T:ASC.Api.Exceptions.ItemNotFoundException"></exception>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetMyEvents">
            <summary>
            Returns the list of all events for the current user with the event titles, date of creation and update, event text and author
            </summary>
            <short>
            My events
            </short>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchEvents(System.String)">
            <summary>
            Returns a list of events matching the search query with the event title, date of creation and update, event type and author
            </summary>
            <short>
            Search
            </short>
             <param name="query">search query</param>
            <returns>List of events</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEvent(System.Int32)">
            <summary>
            Returns the detailed information about the event with the specified ID
            </summary>
            <short>
            Specific event
            </short>
            <param name="feedid">Event ID</param>
            <returns>Event</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEventComments(System.Int32)">
            <summary>
            Returns the detailed information about the comments on the event with the specified ID
            </summary>
            <short>
            Get comments
            </short>
            <param name="feedid">Event id</param>
            <returns>List of comments</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddEventComments(System.Int32,System.String,System.Int64)">
            <summary>
            Adds a comment to the event with the specified ID. The parent event ID can be also specified if needed.
            </summary>
            <short>
            Add comment
            </short>
            <param name="feedid">Event ID</param>
            <param name="content">Comment content</param>
            <param name="parentId">Comment parent ID</param>
            <returns>Comments list</returns>
             <example>
             <![CDATA[
             Sending data in application/json:
             
             {
                 content:"My comment",
                 parentId:"9924256A-739C-462b-AF15-E652A3B1B6EB"
             }
             
             Sending data in application/x-www-form-urlencoded
             content="My comment"&parentId="9924256A-739C-462b-AF15-E652A3B1B6EB"
             ]]>
             </example>
             <remarks>
             Send parentId=0 or don't send it at all if you want your comment to be on the root level
             </remarks>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.VoteForEvent(System.Int32,System.Int64[])">
            <summary>
             Sends a vote to a certain option in a poll-type event with the ID specified
            </summary>
            <short>
             Vote for event
            </short>
            <param name="feedid">Event ID</param>
            <param name="variants">Variants</param>
            <returns>Event</returns>
            <exception cref="T:System.ArgumentException">Thrown if not a Poll</exception>
            <exception cref="T:System.Exception">General error</exception>
             <example>
             <![CDATA[
             Sending data in application/json:
             {
                 variants:[1,2,3],
             }
              Sending data in application/x-www-form-urlencoded
             variants=[1,2,3]
             ]]>
             </example>
             <remarks>
             If event is not a poll, then you'll get an error
             </remarks>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SubscribeOnComments(System.Boolean,System.String)">
            <summary>
             Subscribe or unsubscribe on comments of event with the ID specified
            </summary>
            <short>
             Subscribe/unsubscribe on comments
            </short>
            <param name="isSubscribe">is already subscribed or unsubscribed</param>
            <param name="feedid">Feed ID</param>
            <returns>Boolean value</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetEventCommentPreview(System.String,System.String)">
            <summary>
            Get comment preview with the content specified in the request
            </summary>
            <short>Get comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment content</param>
            <returns>Comment info</returns>
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveEventComment(System.String)">
             <summary>
            Remove comment with the id specified in the request
             </summary>
             <short>Remove comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment info</returns>
             <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddEventComment(System.String,System.String,System.String)">
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateComment(System.String,System.String)">
            <category>Events</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetForums">
            <summary>
            Returns the list of all forums created on the portal with the topic/thread titles, date of creation and update, post text and author ID and display name
            </summary>
            <short>
            Forum list
            </short>
            <returns>List of forums</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetForumsCount">
            <summary>
            Returns the number of all forums created on the portal
            </summary>
            <short>
            Forums count
            </short>
            <returns>Number of forums</returns>
            <visible>false</visible>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetThreadTopics(System.Int32)">
            <summary>
            Returns the list of all thread topics in the forums on the portal with the thread title, date of creation and update, post text and author id and display name
            </summary>
            <short>
            Thread topics
            </short>
            <param name="threadid">Thread ID</param>
            <returns>List of topics in thread</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetLastTopics">
            <summary>
            Returns the list of all recently updated topics in the forums on the portal with the topic title, date of creation and update, post text and author
            </summary>
            <short>
            Last updated topics
            </short>
            <returns></returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetTopicPosts(System.Int32)">
            <summary>
            Returns the list of all posts in a selected thread in the forums on the portal with the thread title, date of creation and update, post text and author ID and display name
            </summary>
            <short>
            Posts
            </short>
            <param name="topicid">Topic ID</param>
            <returns>List of posts in topic</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddThreadToCategory(System.Int32,System.String,System.String,System.String)">
            <summary>
             Add thread to category
            </summary>
            <short>
             Add thread to category
            </short>
             <param name="categoryId">Category ID (-1 for new category)</param>
             <param name="categoryName">Category name</param>
             <param name="threadName">Thread name</param>
             <param name="threadDescription">Thread description</param>
            <returns>Added thread</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddTopic(System.Int32,System.String,System.String,ASC.Forum.TopicType)">
            <summary>
             Adds a new topic to an existing thread with a subject, content and topic type specified
            </summary>
            <short>
             Add topic to thread
            </short>
             <param name="subject">Topic subject</param>
             <param name="threadid">ID of thread to add to</param>
             <param name="content">Topic text</param>
             <param name="topicType">Type of topic</param>
            <returns>Added topic</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateTopic(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
             Updates a topic in an existing thread changing the thread subject, making it sticky or closing it
            </summary>
            <short>
             Update topic in thread
            </short>
             <param name="topicid">ID of topic to update</param>
             <param name="subject">Subject</param>
             <param name="sticky">Is sticky</param>
             <param name="closed">Close topic</param>
            <returns>Updated topic</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddTopicPosts(System.Int32,System.Int32,System.String,System.String)">
            <summary>
             Adds a post to an existing topic with a post subject and content specified in the request
            </summary>
            <short>
             Add post to topic
            </short>
            <param name="topicid">Topic ID</param>
            <param name="parentPostId">Parent post ID</param>
            <param name="subject">Post subject (required)</param>
            <param name="content">Post text</param>
            <returns>New post</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateTopicPosts(System.Int32,System.Int32,System.String,System.String)">
            <summary>
             Updates a post in an existing topic changing the post subject or/and content
            </summary>
            <short>
             Update post in topic
            </short>
            <param name="topicid">Topic ID</param>
            <param name="postid">ID of post to update</param>
            <param name="subject">Post subject (required)</param>
            <param name="content">Post text</param>
            <returns>Updated post</returns>    
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchTopics(System.String)">
            <summary>
            Returns a list of topics matching the search query with the topic title, date of creation and update, post text and author
            </summary>
            <short>
            Search
            </short>
            <param name="query">Search query</param>
            <returns>list of topics</returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePost(System.Int32)">
            <summary>
             Deletes a selected post
            </summary>
            <short>
             Delete post
            </short>
            <param name="postid">Post ID</param>
            <returns></returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteTopic(System.Int32)">
            <summary>
             Deletes a selected topic
            </summary>
            <short>
             Delete topic
            </short>
            <param name="topicid">Topic ID</param>
            <returns></returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteThread(System.Int32)">
            <summary>
             Deletes a selected thread
            </summary>
            <short>
             Delete thread
            </short>
            <param name="threadid">Thread ID</param>
            <returns></returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteThreadCategory(System.Int32)">
            <summary>
             Deletes a selected thread category
            </summary>
            <short>
             Delete category
            </short>
            <param name="categoryid">Category ID</param>
            <returns></returns>
            <category>Forums</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemindAboutBirthday(System.Guid,System.Boolean)">
            <summary>
            Subscribe or unsubscribe on birthday of user with the ID specified
            </summary>
            <short>Subscribe/unsubscribe on birthday</short>
            <param name="userid">user ID</param>
            <param name="onRemind">should be subscribed or unsubscribed</param>
            <returns>onRemind value</returns>
            <category>Birthday</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreatePage(System.String,System.String)">
            <summary>
            Creates a new wiki page with the page name and content specified in the request
            </summary>
            <short>Create page</short>
            <param name="name">Page name</param>
            <param name="body">Page content</param>
            <returns>page info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPages(System.String)">
            <summary>
            Returns the list of all pages in wiki or pages in wiki category specified in the request
            </summary>
            <short>Pages</short>
            <section>Pages</section>
            <param name="category">Category name</param>
            <returns></returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetPage(System.String,System.Nullable{System.Int32})">
            <summary>
            Return the detailed information about the wiki page with the name and version specified in the request
            </summary>
            <short>Page</short>
            <section>Pages</section>
            <param name="name">Page name</param>
            <param name="version">Page version</param>
            <returns>Page info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetHistory(System.String)">
            <summary>
            Returns the list of history changes for the wiki page with the name specified in the request
            </summary>
            <short>History</short>
            <section>Pages</section>
            <param name="page">Page name</param>
            <returns>List of pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchPages(System.String)">
            <summary>
            Returns the list of wiki pages with the name matching the search query specified in the request
            </summary>
            <short>Search</short>
            <section>Pages</section>
            <param name="name">Part of the page name</param>
            <returns>List of pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.SearchPagesByContent(System.String)">
            <summary>
            Returns the list of wiki pages with the content matching the search query specified in the request
            </summary>
            <short>Search</short>
            <section>Pages</section>
            <param name="content">Part of the page content</param>
            <returns>List of pages</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdatePage(System.String,System.String)">
            <summary>
            Updates the wiki page with the name and content specified in the request
            </summary>
            <short>Update page</short>
            <section>Pages</section>
            <param name="name">Page name</param>
            <param name="body">Page content</param>
            <returns>Page info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeletePage(System.String)">
            <summary>
            Deletes the wiki page with the name specified in the request
            </summary>
            <short>Delete page</short>
            <section>Pages</section>
            <param name="name">Page name</param>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.CreateComment(System.String,System.String,System.String)">
            <summary>
            Creates the comment to the selected wiki page with the content specified in the request
            </summary>
            <short>Create comment</short>
            <section>Comments</section>
            <param name="page">Page name</param>
            <param name="content">Comment content</param>
            <param name="parentId">Comment parent id</param>
            <returns>Comment info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetComments(System.String)">
            <summary>
            Returns the list of all comments to the wiki page with the name specified in the request
            </summary>
            <short>All comments</short>
            <section>Comments</section>
            <param name="page">Page name</param>
            <returns>List of comments</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UploadFiles(System.Collections.Generic.IEnumerable{System.Web.HttpPostedFileBase})">
            <summary>
            Uploads the selected files to the wiki 'Files' section
            </summary>
            <short>Upload files</short>
            <param name="files">List of files to upload</param>
            <returns>List of files</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetFile(System.String)">
            <summary>
            Returns the detailed file info about the file with the specified name in the wiki 'Files' section
            </summary>
            <short>File</short>
            <section>Files</section>
            <param name="name">File name</param>
            <returns>File info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.DeleteFile(System.String)">
            <summary>
            Deletes the files with the specified name from the wiki 'Files' section
            </summary>
            <short>Delete file</short>
            <param name="name">File name</param>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.GetWikiCommentPreview(System.String,System.String)">
            <summary>
            Get comment preview with the content specified in the request
            </summary>
            <short>Get comment preview</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="htmltext">Comment content</param>
            <returns>Comment info</returns>
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.RemoveWikiComment(System.String)">
             <summary>
            Remove comment with the id specified in the request
             </summary>
             <short>Remove comment</short>
             <section>Comments</section>
             <param name="commentid">Comment ID</param>
             <returns>Comment info</returns>
             <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.AddWikiComment(System.String,System.String,System.String)">
            <category>Wiki</category>
        </member>
        <member name="M:ASC.Api.Community.CommunityApi.UpdateWikiComment(System.String,System.String)">
            <summary>
            Updates the comment to the selected wiki page with the comment content specified in the request
            </summary>
            <short>Update comment</short>
            <section>Comments</section>
            <param name="commentid">Comment ID</param>
            <param name="content">Comment content</param>
            <returns></returns>
            <category>Wiki</category>
        </member>
    </members>
</doc>
